services:
  web:
    build: .
    container_name: flask-app
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=mysql+pymysql://dbbio:dbbio123!@mysql:3306/dbbio_db?charset=utf8mb4
      - SECRET_KEY=your-super-secret-production-key-change-this
    volumes:
      - .:/app
      - static_volume:/app/app/static
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network
    env_file:
      - .env

  mysql:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      - MYSQL_ROOT_PASSWORD=dbbiorootpass123!
      - MYSQL_DATABASE=dbbio_db
      - MYSQL_USER=dbbio
      - MYSQL_PASSWORD=dbbio123!
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command: 
      --character-set-server=utf8mb4 
      --collation-server=utf8mb4_unicode_ci
      --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-udbbio", "-pdbbio123!"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/app/static
    depends_on:
      - web
    restart: unless-stopped
    networks:
      - app-network

volumes:
  mysql_data:
    driver: local
  static_volume:
    driver: local

networks:
  app-network:
    driver: bridge